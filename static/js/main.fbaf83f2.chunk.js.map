{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Field/Field.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scroll","nextButtonDis","prevButtonDis","prevButton","props","step","imageSize","setState","prevState","scrolled","nextButton","images","frameSize","endOfScroll","length","this","animationDuration","className","style","width","transform","transition","map","image","src","alt","type","disabled","onClick","React","Component","Field","onChangeStep","onChangeFrameSize","onChangeImageSize","onChangeAnimDuration","htmlFor","id","min","max","value","onChange","target","App","handleChangeStep","args","handleChangeFrameSize","handleChangeImageSize","handleChangeAnimDuration","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbaf83f2.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  imageSize: number,\n  animationDuration: number,\n};\n\ntype State = {\n  scroll: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    scroll: 0,\n    nextButtonDis: false,\n    prevButtonDis: false,\n  };\n\n  prevButton = () => {\n    const { step, imageSize } = this.props;\n\n    this.setState((prevState) => {\n      const scrolled = prevState.scroll - (step * imageSize);\n\n      if (scrolled >= 0) {\n        return {\n          scroll: scrolled,\n          nextButtonDis: false,\n        };\n      }\n\n      return {\n        scroll: 0,\n        prevButtonDis: true,\n      };\n    });\n  };\n\n  nextButton = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      imageSize,\n    } = this.props;\n\n    this.setState((prevState) => {\n      const endOfScroll = (images.length - frameSize) * imageSize;\n      const scrolled = prevState.scroll + (step * imageSize);\n\n      if (scrolled <= endOfScroll) {\n        return {\n          scroll: scrolled,\n          prevButtonDis: false,\n        };\n      }\n\n      return {\n        scroll: endOfScroll,\n        nextButtonDis: true,\n      };\n    });\n  };\n\n  render() {\n    const {\n      scroll,\n      prevButtonDis,\n      nextButtonDis,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      imageSize,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${imageSize * frameSize + 5}px` }}\n      >\n        <div className=\"Carousel__container\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${-scroll}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n                style={{ width: `${imageSize}px` }}\n              >\n                <img\n                  className=\"Carousel__image\"\n                  src={image}\n                  alt={image}\n                  style={{ width: `${imageSize}px` }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__prevButton Carousel__button\"\n            disabled={prevButtonDis}\n            onClick={this.prevButton}\n          >\n            {}\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__nextButton Carousel__button\"\n            disabled={nextButtonDis}\n            onClick={this.nextButton}\n          >\n            {}\n          </button>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './Field.scss';\n\ntype Props = {\n  step: number,\n  frameSize: number,\n  imageSize: number,\n  animationDuration: number,\n  onChangeStep: (arg: number) => void,\n  onChangeFrameSize: (arg: number) => void;\n  onChangeImageSize: (arg: number) => void;\n  onChangeAnimDuration: (arg: number) => void;\n};\n\nexport const Field: React.FC<Props> = ({\n  step,\n  frameSize,\n  imageSize,\n  animationDuration,\n  onChangeStep,\n  onChangeFrameSize,\n  onChangeImageSize,\n  onChangeAnimDuration,\n}) => {\n  return (\n    <fieldset className=\"Field\">\n      <form>\n        <div className=\"Field__container\">\n          <label className=\"Field__label\" htmlFor=\"step-input\">\n            Step:\n          </label>\n          <input\n            id=\"step-input\"\n            className=\"Field__input Field__input--step\"\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            value={step}\n            onChange={({ target }) => {\n              onChangeStep(+target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"Field__container\">\n          <label className=\"Field__label\" htmlFor=\"frame-input\">\n            Frame Size:\n          </label>\n          <input\n            id=\"frame-input\"\n            className=\"Field__input Field__input--frame\"\n            type=\"number\"\n            min=\"3\"\n            max={1300 / imageSize}\n            value={frameSize}\n            onChange={({ target }) => {\n              onChangeFrameSize(+target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"Field__container\">\n          <label className=\"Field__label\" htmlFor=\"width-input\">\n            Item width:\n          </label>\n          <input\n            id=\"width-input\"\n            className=\"Field__input Field__input--width\"\n            type=\"number\"\n            min=\"130\"\n            max={1300 / frameSize}\n            value={imageSize}\n            step=\"10\"\n            onChange={({ target }) => {\n              onChangeImageSize(+target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"Field__container\">\n          <label className=\"Field__label\" htmlFor=\"animation=input\">\n            Animation Duration:\n          </label>\n          <input\n            id=\"animation-input\"\n            className=\"Field__input\"\n            type=\"number\"\n            min=\"400\"\n            value={animationDuration}\n            step=\"100\"\n            onChange={({ target }) => {\n              onChangeAnimDuration(+target.value);\n            }}\n          />\n        </div>\n      </form>\n    </fieldset>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Field } from './components/Field/Field';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  imageSize: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    imageSize: 130,\n    animationDuration: 1000,\n  };\n\n  handleChangeStep = (args: number) => {\n    this.setState({ step: args });\n  };\n\n  handleChangeFrameSize = (args: number) => {\n    this.setState({ frameSize: args });\n  };\n\n  handleChangeImageSize = (args: number) => {\n    this.setState({ imageSize: args });\n  };\n\n  handleChangeAnimDuration = (args: number) => {\n    this.setState({ animationDuration: args });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      imageSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          imageSize={imageSize}\n          animationDuration={animationDuration}\n        />\n\n        <Field\n          step={step}\n          frameSize={frameSize}\n          imageSize={imageSize}\n          animationDuration={animationDuration}\n          onChangeStep={this.handleChangeStep}\n          onChangeFrameSize={this.handleChangeFrameSize}\n          onChangeImageSize={this.handleChangeImageSize}\n          onChangeAnimDuration={this.handleChangeAnimDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}